"use strict";angular.module("grapheneTidalApp",["sg.graphene"]),angular.module("grapheneTidalApp").controller("MainCtrl",["$scope","$window",function(a,b){b.myCb=function(){console.log("layout complete")},a.nodeSize={min:{width:80,height:30},max:{width:160,height:60}},a.subgraph={height:200,width:800},a.layoutComplete="myCb",a.charge=-1200,a.jsonUrl="sampleJSONwithProps.json",a.linkDistance=80}]),angular.module("grapheneTidalApp").controller("sgTidalDataCtrl",["$scope","$http","$window",function(a,b,c){a.callWindowFunction=function(a){_.isFunction(c[a])&&c[a]()},a.$watch("jsonUrl",function(d){d&&b.get(a.jsonUrl).success(function(b){a.data=b,c.copy=angular.copy(b)})}),a.$watch("json",function(b){b&&(a.data=a.json)});var d=function(a){var b=new Blob([a],{type:"text/plain"});return(window.URL||window.webkitURL).createObjectURL(b)};a.svgToUrl=function(){var b=c.document.querySelector("svg"),e=new XMLSerializer;a.svgUrl=d(e.serializeToString(b))},a.loadGene=function(){a.exports.geneData={STAT5A:{sources:["CEBPG","ETS2","IRF1","NFE2L1","SOX15","ZEB1"],group:"	4 hours",targets:["ALX1","FOSL1"]}}},a.$watch("data",function(b){b&&(a.exports={data:a.data,charge:a.charge,linkDistance:a.linkDistance,subgraph:a.subgraph,nodeSize:a.nodeSize})})}]),angular.module("grapheneTidalApp").controller("sgTidalLayoutCtrl",["$scope","sgGeo",function(a,b){a.scale=1,a.spacer=10,a.OPACITY={focused:1,unfocused:.1,normal:1};var c=function(b){a.edges=_.map(b.edges,function(a){return{source:_.find(b.nodes,function(b){return b.id===a.nodes[0]}),target:_.find(b.nodes,function(b){return b.id===a.nodes[1]}),type:a.type}}),a.nodes=b.nodes;var c=b.timeSlots,d=_.keys(c).sort(function(a,b){var c=/[^a-zA-Z]/g,d=/[^0-9]/g,e=a.replace(c,""),f=b.replace(c,"");if(e===f){var g=parseInt(a.replace(d,""),10),h=parseInt(b.replace(d,""),10);return g===h?0:g>h?1:-1}return e>f?1:-1}),e={};e.max=_.max(b.nodes,function(a){return a.size}),e.min=_.min(b.nodes,function(a){return a.size}),a.groups=[];var f=0,g=0;_.each(d,function(d){var h=c[d],i=_.filter(b.nodes,function(a){return _.contains(h,a.id)});_.each(i,function(b){b.group=f,b.scaleFactor=(b.size-e.min.size)/(e.max.size-e.min.size),b.width=a.imports.nodeSize.min.width+(a.imports.nodeSize.max.width-a.imports.nodeSize.min.width)*b.scaleFactor,b.height=a.imports.nodeSize.min.height+(a.imports.nodeSize.max.height-a.imports.nodeSize.min.height)*b.scaleFactor});var j=_.filter(a.edges,function(a){return _.contains(h,a.source.id)&&_.contains(h,a.target.id)}),k=d3.layout.force().charge(a.imports.charge||-700).linkDistance(a.imports.linkDistance||40).gravity(a.imports.gravity||.1).size([a.imports.subgraph.width||800,a.imports.subgraph.height||800]);_.each(i,function(a){a.force=k});var l=!1;k.nodes(i).on("tick",function(){a.imports.subgraph.height&&a.imports.subgraph.width&&(_.each(k.nodes(),function(b){b.x=Math.max(b.width,Math.min(a.imports.subgraph.width-b.width,b.x)),b.y=Math.max(b.height,Math.min(a.imports.subgraph.height-b.height,b.y))}),l||(a.$digest(),l=!0));var b=a.layoutStopThreshold||.01;k.alpha()<=b&&(k.stop(),a.$digest(),a.layoutComplete&&(g+=1,g===a.groups.length&&a.callWindowFunction(a.layoutComplete)))}).start(),a.groups.push({nodes:i,links:j,name:d,count:f,force:k}),f+=1}),a.lookup={},a.lookup.node=_.indexBy(b.nodes,"name"),_.each(a.edges,function(a){a.source.from=a.source.from||[],a.source.from.push(a),a.target.to=a.target.to||[],a.target.to.push(a)})},d=function(c){var d=b.getLineIntersectionWithRectangle({x1:c.source.x,y1:c.source.y+c.source.group*a.imports.subgraph.height,x2:c.target.x,y2:c.target.y+c.target.group*a.imports.subgraph.height},{x1:c.source.x-(c.source.width/2+a.spacer),y1:c.source.y-(c.source.height/2+a.spacer)+c.source.group*a.imports.subgraph.height,x2:c.source.x+c.source.width/2+a.spacer,y2:c.source.y+c.source.height/2+a.spacer+c.source.group*a.imports.subgraph.height}),e=b.getLineIntersectionWithRectangle({x1:c.source.x,y1:c.source.y+c.source.group*a.imports.subgraph.height,x2:c.target.x,y2:c.target.y+c.target.group*a.imports.subgraph.height},{x1:c.target.x-(c.target.width/2+a.spacer),y1:c.target.y-(c.target.height/2+a.spacer)+c.target.group*a.imports.subgraph.height,x2:c.target.x+c.target.width/2+a.spacer,y2:c.target.y+c.target.height/2+a.spacer+c.target.group*a.imports.subgraph.height});c.x1=d.x,c.y1=d.y,c.x2=e.x,c.y2=e.y};a.$watchCollection("edges",function(b){b&&_.each(a.edges,function(b){a.$watch(function(){return b.source.x+b.source.y+b.target.x+b.target.y},function(){d(b)}),d(b)})}),a.arrow=d3.svg.symbol().size(function(a){return a.size}).type(function(a){return a.type}),a.mouseoverNode=function(b){var c=a.OPACITY;_.each(a.edges,function(a){a.opacity=c.unfocused}),_.each(a.nodes,function(a){a.opacity=c.unfocused}),b.opacity=c.focused,_.each(b.from,function(a){a.opacity=c.focused,a.target.opacity=c.focused}),_.each(b.to,function(a){a.opacity=c.focused,a.source.opacity=c.focused})},a.mouseleaveNode=function(){var b=a.OPACITY;_.each(a.nodes,function(a){a.opacity=b.normal}),_.each(a.edges,function(a){a.opacity=b.normal})};var e=function(b){_.each(a.groups,function(a){a.nodes=_.filter(a.nodes,function(a){return _.isEqual(a.type,"gene")?!1:!0})}),a.edges=_.filter(a.edges,function(a){return _.isEqual(a.target.type,"gene")||_.isEqual(a.source.type,"gene")?!1:!0});var c={};c.group=_.indexBy(a.groups,"name"),c.node=_.indexBy(a.nodes,"name"),_.each(b,function(b,d){var e=c.group[b.group],f={name:d,type:"gene",width:80,height:30,from:[],to:[],group:e.count,force:e.force};e.nodes.push(f),_.each(b.sources,function(b){var d=c.node[b],e={source:d,target:f};a.edges.push(e),d.from.push(e),f.to.push(e)}),_.each(b.targets,function(b){var d=c.node[b],e={target:d,source:f};a.edges.push(e),d.to.push(e),f.from.push(e)});var g=f.force;g.nodes(e.nodes),g.start()})};a.$watch("imports.data",function(a){a&&c(a)}),a.$watch("imports.geneData",function(a){a&&e(a)})}]);